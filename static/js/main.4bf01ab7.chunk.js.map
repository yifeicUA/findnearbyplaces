{"version":3,"sources":["communication/api.js","components/Home.js","components/Signup.js","components/Login.js","components/Menu.js","components/report.js","App.js","reportWebVitals.js","index.js"],"names":["baseURL","api","getFlowers","fetch","then","x","y","json","console","log","getQuiz","name","map","picture","choices","split","answer","setUser","email","password","method","withCredentials","headers","body","JSON","stringify","getUser","credentials","Accept","verifyTwitter","username","logout","Home","props","useState","open","setOpen","Badge","bg","Form","onSubmit","e","preventDefault","Group","className","Control","size","type","placeholder","Text","Check","label","Button","variant","onClick","Fade","in","id","Alert","Row","Label","as","Col","Select","defaultValue","Signin","succed","setSucced","setEmail","setName","setPassword","controlId","onChange","target","value","required","Login","history","useHistory","done","localStorage","setItem","onAuthenticated","push","pathname","Menu","Navbar","defaultActiveKey","Container","Nav","Item","Link","href","Toggle","Collapse","REPORT","rows","App","isAuthenticated","setIsAuthenticated","undefined","setNumber","customerAuthenticated","path","getIndex","picIndex","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bf01ab7.chunk.js","sourcesContent":["const baseURL =\"https://yifeicua-findnearbyplaces.herokuapp.com\";\r\n\r\nlet getFlowers = () => {\r\n    return fetch(`${baseURL}/flowers`).then((x) => {\r\n        let y = x.json();\r\n        console.log(y);\r\n        return y;\r\n    });\r\n}\r\n\r\nlet getQuiz = (name) =>{\r\n    return fetch(`${baseURL}/quiz/${name}`)\r\n    .then((x) => x.json())\r\n    /*\r\n    .then(x => {\r\n        if (x.status == 401) {\r\n            window.location.replace(\"/login\");\r\n        } \r\n    })\r\n    */\r\n    .then((x)=> x.map((y) => {\r\n        return{\r\n            picture: y.picture,\r\n            choices: y.choices.split(\",\"),\r\n            answer: y.answer,\r\n        };\r\n    })\r\n    \r\n    )\r\n    \r\n}\r\n/*\r\nlet setUser = (name, email, password) =>{\r\n    return fetch(`${baseURL}/register`,{\r\n        method: \"POST\",\r\n        body: JSON.stringify({name,email,password}),\r\n        headers:{\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    });\r\n}\r\nlet getUser = (email, password) =>{\r\n    return fetch(`${baseURL}/login`,{\r\n        method: \"POST\",\r\n        body: JSON.stringify({email,password}),\r\n        headers:{\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    });\r\n}\r\n*/\r\n  let setUser = (name, email, password) => {\r\n    return fetch(`${baseURL}/register`, {\r\n        method: 'POST',\r\n        withCredentials: true,\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({name, email, password})\r\n    }).then(x => x.json());\r\n};\r\n\r\nlet getUser = (email, password) => {\r\n    return fetch(`${baseURL}/login`, {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Credentials\": true\r\n        },\r\n        body: JSON.stringify({email, password})\r\n    }).then(x => x.json());\r\n}\r\nlet logout = () => {\r\n    return fetch(`${baseURL}/logout`, {\r\n        method: \"GET\",\r\n        credentials: \"include\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Credentials\": true\r\n        }\r\n      })\r\n    .then(x => x.json());\r\n}\r\n\r\nlet verifyTwitter = (username) => {\r\n  return fetch(`${baseURL}/twitter/verify/${username}`, {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Credentials\": true\r\n      }\r\n    })\r\n  .then(x => x.json());\r\n}\r\n\r\nlet api = {\r\n    getFlowers: getFlowers,\r\n    getQuiz: getQuiz,\r\n    setUser: setUser,\r\n    getUser: getUser,\r\n    verifyTwitter: verifyTwitter,\r\n    logout:logout\r\n}\r\n\r\nexport default api;","//import App from \"../App\";\r\nimport { Container,Fade,Badge, Row, Col, CardGroup,Button,Form, Card, Alert} from \"react-bootstrap\";\r\n//import flowers from './flowers.js';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport api from \"../communication/api\";\r\nconst Home = (props) => {\r\n    const onFormSubmit = e => {\r\n        e.preventDefault();\r\n  }\r\n  const [open, setOpen] = useState(false);\r\n    return (\r\n        <>\r\n        <h1>\r\n        Find near by places: <Badge bg=\"secondary\">yelp</Badge>\r\n        </h1>\r\n        <Form onSubmit={onFormSubmit}>\r\n        <Form.Group className=\"mb-3\">\r\n            <Form.Control size=\"lg\" type=\"text\" placeholder=\"Search...\"  />\r\n            <Form.Text className=\"text-muted\">\r\n                Please enter your search term Ex: McDonald's / Restaurant\r\n            </Form.Text>\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\">\r\n            <Form.Check type=\"checkbox\" label=\"save account number\" />\r\n        </Form.Group>\r\n        <div className=\"d-grid gap-2\">\r\n        <Button size=\"lg\" variant=\"primary\" type=\"submit\">\r\n            Search\r\n        </Button>\r\n        </div>\r\n        <div className=\"d-grid gap-2\">\r\n        <Button\r\n            onClick={() => setOpen(!open)}\r\n            aria-controls=\"example-fade-text\"\r\n            aria-expanded={open}\r\n            variant=\"outline-danger\"\r\n        >\r\n            help\r\n        </Button>\r\n        </div>\r\n        <Fade in={open}>\r\n        <div id=\"example-fade-text\">\r\n        <Alert key={\"success\"}>Please enter the query items according to your needs</Alert>\r\n            You need a string containing the search term. A search term is a place name or a category name or part of a place name or part of a category name.\r\n\r\n            And below, you have to give us your current location which should be whare you are now, you should enter a name of place\r\n\r\n            radius: is Optional search radius in meters. a number\r\n\r\n            category: is Optional category to filter search results, e.g., Restaurants, Shopping Centers, etc.\r\n\r\n            sortBy: Optional sort mode: Best matched (0 - default), Minimum\r\n        </div>\r\n      </Fade>\r\n        <Row><Alert key={\"info\"}>Please fill in the items below to assist in the search according to your needs</Alert></Row>\r\n    \r\n    <Form.Group className=\"mb-3\">\r\n      <Form.Label>Where are you?</Form.Label>\r\n      <Form.Control type=\"text\" />\r\n    </Form.Group>\r\n    \r\n    <Row className=\"mb-3\">\r\n    \r\n\r\n    <Form.Group as={Col}>\r\n      <Form.Label>Category(optional)</Form.Label>\r\n      <Form.Control type=\"text\" />\r\n    </Form.Group>\r\n\r\n    <Form.Group as={Col}>\r\n    <Form.Label>radius(optional)</Form.Label>\r\n    <Form.Control placeholder=\"1000\" />\r\n  </Form.Group>\r\n\r\n  <Form.Group as={Col}>\r\n    <Form.Label>sortBy(optional)</Form.Label>\r\n    <Form.Select defaultValue=\"Choose...\">\r\n        <option>Best matched</option>\r\n        <option>Minimum</option>\r\n      </Form.Select>\r\n  </Form.Group>\r\n  </Row>\r\n    </Form>\r\n    </>\r\n        \r\n    );\r\n\r\n}\r\nexport default Home;\r\n\r\n    /*\r\n    const [flowers, setFlowers] = useState([]);\r\n    useEffect(() => {\r\n        if(flowers.length > 0)return;\r\n        api.getFlowers().then(x => setFlowers(x)).catch((e) => console.log(e));\r\n    },[]\r\n    );\r\n    const {index, setNumber} = useState(0);\r\n    const history = useHistory();\r\n    let send =(event) =>{\r\n        event.preventDefault();\r\n        //alert(event.target.name);\r\n        props.getIndex(event.target.name);\r\n        history.push('/question')\r\n    }\r\n    let curr = [];\r\n    for(var i=0; i<flowers.length; i++){\r\n        curr.push(<Card >\r\n            <Card.Link href = \"#question\"  value={flowers[i].name} onClick={send}>\r\n            <Card.Img variant=\"top\"  src={flowers[i].picture} name={flowers[i].name} onClick={send}/>\r\n            </Card.Link>\r\n            <Card.Body>\r\n                <Card.Title>{flowers[i].name}</Card.Title>\r\n            </Card.Body>\r\n            </Card>);\r\n    }\r\n    //past.appendChild(curr);\r\n    return (\r\n        (curr)\r\n    );\r\n    */\r\n\r\n\r\n    /*\r\n    let past = document.createElement('div');;\r\n    \r\n    let numrow = 0;\r\n    for(var i=0; i<flowers.length; i++){\r\n        if(i%4==0){\r\n            past.appendChild(curr);\r\n            curr = document.createElement('Row');\r\n        }\r\n        let pcard =document.createElement('Card');\r\n        let pcardimg = document.createElement('Card.Img');\r\n        pcardimg.setAttribute('variant','top');\r\n        pcardimg.src = flowers[i].picture;\r\n        let pcardbod = document.createElement('Card.Body');\r\n        let pcardtit = document.createElement('Card.Title');\r\n        pcardtit.innerHTML = flowers[i].name;\r\n        pcardbod.appendChild(pcardtit);\r\n        pcard.appendChild(pcardimg);\r\n        pcard.appendChild(pcardbod);\r\n        curr.appendChild(pcard)\r\n        */\r\n        ","//import App from \"../App\";\r\nimport React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Alert,Card, Button, Form, Row} from 'react-bootstrap';\r\nimport { useEffect, useState } from \"react\";\r\nimport api from '../communication/api';\r\nconst Signin = () => {\r\n    let [succed, setSucced] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [name, setName] = useState();\r\n    const [password, setPassword] = useState();\r\n    //const emailInput = ({target:{email}}) => setEmail(email);\r\n    //const nameInput = ({target:{name}}) => setName(name);\r\n    //const passwordInput = ({target:{password}}) => setPassword(password);\r\n    const onFormSubmit = e => {\r\n          e.preventDefault();\r\n          console.log(email);\r\n          console.log(name);\r\n          console.log(password);\r\n          succed = api.setUser(name,email,password).then(x => {console.log(x); setSucced(\"       Sign up successfully！！！\");});\r\n    }\r\n    return (\r\n        <><Form onSubmit={onFormSubmit}>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={e => setEmail(e.target.value)} required />\r\n                <Form.Text className=\"text-muted\">\r\n                    please enter your email address\r\n                </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\r\n                <Form.Label>User name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"username\" onChange={e => setName(e.target.value)}  required />\r\n                <Form.Text className=\"text-muted\">\r\n                    please enter your username\r\n                </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} required />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                <Form.Check type=\"checkbox\" label=\"save account number\" />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Sign up\r\n            </Button>\r\n        </Form>\r\n        <Row><Alert key={\"info\"}>Sign up with username(show in console): {name}{succed}</Alert></Row>\r\n        </>\r\n    );\r\n}\r\nexport default Signin;\r\n\r\n/*\r\n<Card className=\"text-center\">\r\n            <Card.Header>Sign In</Card.Header>\r\n            <Card.Body>\r\n                <Card.Title>Enter your name</Card.Title>\r\n                <Card.Text>Yifei Chen</Card.Text>\r\n                <Button variant=\"primary\">Sign in</Button>\r\n            </Card.Body>\r\n            <Card.Footer className=\"text-muted\">the name will be your username</Card.Footer>\r\n        </Card>\r\n*/","//import App from \"../App\";\r\nimport React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Alert,Card, Button, Form, Row} from 'react-bootstrap';\r\nimport { useEffect, useState } from \"react\";\r\nimport api from '../communication/api';\r\nimport { useHistory } from 'react-router-dom';\r\nconst Login = (props) => {\r\n    let [succed, setSucced] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const history = useHistory();\r\n    //const emailInput = ({target:{email}}) => setEmail(email);\r\n    //const nameInput = ({target:{name}}) => setName(name);\r\n    //const passwordInput = ({target:{password}}) => setPassword(password);\r\n    const onFormSubmit = e => {\r\n          e.preventDefault();\r\n          console.log(email);\r\n          console.log(password);\r\n          api.getUser(email,password)\r\n          //.then(x => x.json())\r\n          .then(x => {\r\n              console.log(x); \r\n              if(x.done==true){\r\n                localStorage.setItem(\"customer\",email);  \r\n                setSucced(\"       Login successfully！！！(check console)\");\r\n                props.onAuthenticated();\r\n                history.push({ pathname: '/' });}\r\n              else{setSucced(\"       Login faild(check console)\");}});\r\n    }\r\n    return (\r\n        <><Form onSubmit={onFormSubmit}>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={e => setEmail(e.target.value)} required />\r\n                <Form.Text className=\"text-muted\">\r\n                    please enter your email address\r\n                </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} required />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                <Form.Check type=\"checkbox\" label=\"save account number\" />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Login\r\n            </Button>\r\n        </Form><Row><Alert key={\"info\"}>Login with Email(show in console): {email}{succed}</Alert></Row></>\r\n    );\r\n}\r\nexport default Login;\r\n/*\r\nconst Login = () => {\r\n    return (\r\n        <Card className=\"text-center\">\r\n            <Card.Header>Login</Card.Header>\r\n            <Card.Body>\r\n                <Card.Title>Enter your name</Card.Title>\r\n                <Card.Text>Yifei Chen</Card.Text>\r\n                <Button variant=\"primary\">Login</Button>\r\n            </Card.Body>\r\n            <Card.Footer className=\"text-muted\">you already login as Yifei</Card.Footer>\r\n        </Card>\r\n    );\r\n}\r\nexport default Login;\r\n*/","//import App from \"../App\";\r\nimport { Container, Navbar, Nav } from 'react-bootstrap';\r\nconst Menu = () => {\r\n    return (\r\n        <Navbar variant=\"pills\" defaultActiveKey=\"/\" bg=\"dark\">\r\n            <Container>\r\n                <Nav.Item>\r\n                    <Nav.Link href=\"#/\">Home</Nav.Link>\r\n                </Nav.Item>\r\n                <Navbar.Toggle />\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                    <Nav.Item>\r\n                        <Nav.Link href=\"#report\">Report a new place</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link href=\"#login\">Login</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link href=\"#sign\">Signup</Nav.Link>\r\n                    </Nav.Item>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\nexport default Menu;","import { Container,Fade,Badge, Row, Col, CardGroup,Button,Form, Card, Alert} from \"react-bootstrap\";\r\n//import flowers from './flowers.js';\r\nimport { useEffect, useState } from \"react\";\r\nconst REPORT = (props) => {\r\n    const onFormSubmit = e => {\r\n        e.preventDefault();\r\n  }\r\n    return (\r\n        <>\r\n        <h1>\r\n        Report a new places: <Badge bg=\"secondary\">yelp</Badge>\r\n        </h1>\r\n        <Form onSubmit={onFormSubmit}>\r\n        <Form.Group className=\"mb-3\">\r\n            <Form.Control size=\"lg\" type=\"text\" placeholder=\"Name...\"  />\r\n            <Form.Text className=\"text-muted\">\r\n                Please enter the name of a place Ex: McDonald's\r\n            </Form.Text>\r\n        </Form.Group>\r\n    \r\n    <Row className=\"mb-3\">\r\n    <Form.Group as={Col}>\r\n      <Form.Label>Category</Form.Label>\r\n      <Form.Control type=\"text\" />\r\n    </Form.Group>\r\n\r\n    <Form.Group as={Col}>\r\n    <Form.Label>latitude</Form.Label>\r\n    <Form.Control placeholder=\"32.222607\" />\r\n  </Form.Group>\r\n\r\n  <Form.Group as={Col}>\r\n    <Form.Label>longitude</Form.Label>\r\n    <Form.Control placeholder=\"-110.974709\" />\r\n  </Form.Group>\r\n  <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n    <Form.Label>Discription</Form.Label>\r\n    <Form.Control as=\"textarea\" rows={3} />\r\n  </Form.Group>\r\n  </Row>\r\n  <div className=\"d-grid gap-2\">\r\n        <Button size=\"lg\" variant=\"primary\" type=\"submit\">\r\n            Submit\r\n        </Button>\r\n        </div>\r\n    </Form>\r\n    </>\r\n        \r\n    );\r\n\r\n}\r\nexport default REPORT;","\n//import logo from './logo.svg';\nimport Home from './components/Home';\nimport Signin from './components/Signup';\nimport Login from './components/Login';\nimport Menu from './components/Menu';\nimport REPORT from './components/report';\nimport { useEffect, useState } from 'react';\n//import React from 'react';\nimport {\n  //BrowserRouter as router,\n  HashRouter,\n  Switch,\n  Route,\n  Redirect,\n  useParams,\n  useHistory\n  //Link\n}from \"react-router-dom\";\nimport { Container, Row, Col, Alert } from 'react-bootstrap';\n//import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport api from \"./communication/api\";\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  let onCustomerAuthenticated = () => {\n    setIsAuthenticated(true);\n  }\n\n\n  const [number, setNumber] = useState(undefined);\n  const [grade, setGrade] = useState(0);\n  localStorage.setItem(\"customer\",undefined);  \n  let index = 0;\n\n  let getnumIndex = (picIndex) => {\n    setNumber(picIndex);\n    \n  }\n  let updateGrade = (Grade) => {\n    setGrade(grade+Grade);\n    //alert(grade);\n    \n  }\n  //alert(number);\n  return (\n    <HashRouter>\n      <Container>\n        <Row>\n          <Col><Menu customerAuthenticated={isAuthenticated} /></Col>\n        </Row>\n        <Switch>\n          <Route path=\"/sign\">\n            <Signin />\n          </Route>\n          <Route path=\"/login\">\n            <Login onAuthenticated={onCustomerAuthenticated} />\n          </Route>\n          <Route path=\"/report\">\n            <REPORT />\n          </Route>\n          <Route path=\"/\">\n            <Home getIndex={getnumIndex} />\n          </Route>\n        </Switch>\n\n      </Container>\n    </HashRouter>\n  );\n}\n\nlet PrivateRoute = ({ children, ...rest }) => {\n  let customer = localStorage.getItem('customer');\n  console.log(customer==\"undefined\");\n  /*\n  if(customer==\"undefined\"){\n    window.location.replace(\"/login\")\n  }\n  */\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        customer!=\"undefined\" ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nlet Twitter = (props) => {\n  let { username, name } = useParams();\n  let history = useHistory();\n  \n  useEffect(() => {\n    console.log('in Twitter ...');\n    api.verifyTwitter(username)\n      .then(x => {\n        console.log(x);\n        if (x.done) {\n          localStorage.setItem('customer', name);\n          props.onAuthenticated();\n        }\n      });\n  });\n  \n  \n  \n    return (\n      <Home />\n    );\n  }\nexport default App;\n\n\n\n\n/*\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n*/","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}